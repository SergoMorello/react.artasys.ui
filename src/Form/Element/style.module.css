/* Input */

.container {
	display: flex;
    align-items: center;
	width: 100%;
	position: relative;
    border-radius: 6px;
	font-family: Helvetica;
	z-index: 0;
}

.container.hidden {
	border: 0;
}

.element {
	align-self: stretch;
	width: 100%;
}

.element > input, .element > textarea {
	width: 100%;
	height: 100%;
	min-height: 45px;
	max-height: 500px;
	max-height: 50dvh;
	margin: 0;
	padding: 10px;
    font-size: 20px;
	box-sizing: border-box;
	background-color: transparent;
	border: 1px solid var(--brand-300-primary);
	border-radius: 6px;
	outline: none;
	resize: none;
	transition: .2s;
}

.container.disabled {
	background-color: var(--neutral-200);
}

.element > input:-webkit-autofill,
.element > input:-webkit-autofill:hover, 
.element > input:-webkit-autofill:focus, 
.element > input:-webkit-autofill:active{
	-webkit-background-clip: text;
}

.element > input:focus, .element > input:hover {
	outline: none;
	box-shadow: inset 0 0 0 1px var(--brand-300-primary);
}

.element > .placeholder {
	position: absolute;
	display: flex;
	justify-content: center;
	align-items: center;
	top: 0;
	margin-left: 16px;
	height: 100%;
	color: var(--neutral-400);
	font-size: 16px;
	z-index: -1;
	user-select: none;
	transition: transform 0.3s;
}

.element > textarea ~ .placeholder {
	max-height: 2em;
}

.element > .placeholder::before {
	content: "";
	position: absolute;
	display: block;
	width: 100%;
	height: 5px;
	background-color: var(--neutral-white);
	z-index: -1;
}

.element > input:required ~ .placeholder::after {
	content: "*";
}

/* Date */
.element > input[type="date"]::-webkit-calendar-picker-indicator {
	cursor: pointer;
	border-radius: 4px;
	margin-right: 2px;
	opacity: 0.7;
	filter: invert(0.8);
}

.element > input[type="date"]::-webkit-calendar-picker-indicator:hover {
	opacity: 1
}

.element > input[type="date"] ~ .placeholder,
.element > input:focus ~ .placeholder,
.element > textarea:focus ~ .placeholder,
.element > input:not([value=""]) ~ .placeholder,
.element > textarea:not(:empty) ~ .placeholder,
.element > input:not(:empty) ~ .placeholder {
	transform: translate(-10%, -50%) scale(0.8);
	z-index: 0;
}

.container.error {
	border-color: var(--error-primary);
}

.container.error .placeholder {
	color: var(--error-primary);
}

.error {
	color: var(--error-primary);
}